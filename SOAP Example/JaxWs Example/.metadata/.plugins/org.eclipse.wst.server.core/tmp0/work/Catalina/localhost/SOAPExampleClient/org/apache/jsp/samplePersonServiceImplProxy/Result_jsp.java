/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.14
 * Generated at: 2017-07-22 23:19:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.samplePersonServiceImplProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");

      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Result</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("\t<H1>Result</H1>\r\n");
      out.write("\r\n");
      out.write("\t");
      com.soap.jaxws.service.PersonServiceImplProxy samplePersonServiceImplProxyid = null;
      synchronized (session) {
        samplePersonServiceImplProxyid = (com.soap.jaxws.service.PersonServiceImplProxy) _jspx_page_context.getAttribute("samplePersonServiceImplProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (samplePersonServiceImplProxyid == null){
          samplePersonServiceImplProxyid = new com.soap.jaxws.service.PersonServiceImplProxy();
          _jspx_page_context.setAttribute("samplePersonServiceImplProxyid", samplePersonServiceImplProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      out.write('	');

		if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
			samplePersonServiceImplProxyid.setEndpoint(request.getParameter("endpoint"));
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");

		String method = request.getParameter("method");
		int methodID = 0;
		if (method == null)
			methodID = -1;

		if (methodID != -1)
			methodID = Integer.parseInt(method);
		boolean gotMethod = false;

		try {
			switch (methodID) {
			case 2:
				gotMethod = true;
				java.lang.String getEndpoint2mtemp = samplePersonServiceImplProxyid.getEndpoint();
				if (getEndpoint2mtemp == null) {
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getEndpoint2mtemp);
      out.write('\r');
      out.write('\n');
      out.write('	');

		} else {
					String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils
							.markup(String.valueOf(getEndpoint2mtemp));
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(tempResultreturnp3);
      out.write('\r');
      out.write('\n');
      out.write('	');

		}
				break;
			case 5:
				gotMethod = true;
				String endpoint_0id = request.getParameter("endpoint8");
				java.lang.String endpoint_0idTemp = null;
				if (!endpoint_0id.equals("")) {
					endpoint_0idTemp = endpoint_0id;
				}
				samplePersonServiceImplProxyid.setEndpoint(endpoint_0idTemp);
				break;
			case 10:
				gotMethod = true;
				com.soap.jaxws.service.PersonServiceImpl getPersonServiceImpl10mtemp = samplePersonServiceImplProxyid
						.getPersonServiceImpl();
				if (getPersonServiceImpl10mtemp == null) {
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getPersonServiceImpl10mtemp);
      out.write('\r');
      out.write('\n');
      out.write('	');

		} else {
	
      out.write("\r\n");
      out.write("\t<TABLE>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("\t</TABLE>\r\n");
      out.write("\t");

		}
				break;
			case 15:
				gotMethod = true;
				String age_2id = request.getParameter("age20");
				int age_2idTemp = Integer.parseInt(age_2id);
				String name_3id = request.getParameter("name22");
				java.lang.String name_3idTemp = null;
				if (!name_3id.equals("")) {
					name_3idTemp = name_3id;
				}
				String id_4id = request.getParameter("id24");
				int id_4idTemp = Integer.parseInt(id_4id);
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      com.soap.jaxws.beans.Person com1soap1jaxws1beans1Person_1id = null;
      synchronized (session) {
        com1soap1jaxws1beans1Person_1id = (com.soap.jaxws.beans.Person) _jspx_page_context.getAttribute("com1soap1jaxws1beans1Person_1id", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (com1soap1jaxws1beans1Person_1id == null){
          com1soap1jaxws1beans1Person_1id = new com.soap.jaxws.beans.Person();
          _jspx_page_context.setAttribute("com1soap1jaxws1beans1Person_1id", com1soap1jaxws1beans1Person_1id, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      out.write('	');

		com1soap1jaxws1beans1Person_1id.setAge(age_2idTemp);
				com1soap1jaxws1beans1Person_1id.setName(name_3idTemp);
				com1soap1jaxws1beans1Person_1id.setId(id_4idTemp);
				boolean addPerson15mtemp = samplePersonServiceImplProxyid
						.addPerson(com1soap1jaxws1beans1Person_1id);
				String tempResultreturnp16 = org.eclipse.jst.ws.util.JspUtils
						.markup(String.valueOf(addPerson15mtemp));
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(tempResultreturnp16);
      out.write('\r');
      out.write('\n');
      out.write('	');

		break;
			case 26:
				gotMethod = true;
				String id_5id = request.getParameter("id29");
				int id_5idTemp = Integer.parseInt(id_5id);
				boolean deletePerson26mtemp = samplePersonServiceImplProxyid.deletePerson(id_5idTemp);
				String tempResultreturnp27 = org.eclipse.jst.ws.util.JspUtils
						.markup(String.valueOf(deletePerson26mtemp));
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(tempResultreturnp27);
      out.write('\r');
      out.write('\n');
      out.write('	');

		break;
			case 31:
				gotMethod = true;
				String id_6id = request.getParameter("id40");
				int id_6idTemp = Integer.parseInt(id_6id);
				com.soap.jaxws.beans.Person getPerson31mtemp = samplePersonServiceImplProxyid.getPerson(id_6idTemp);
				if (getPerson31mtemp == null) {
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getPerson31mtemp);
      out.write('\r');
      out.write('\n');
      out.write('	');

		} else {
	
      out.write("\r\n");
      out.write("\t<TABLE>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD COLSPAN=\"3\" ALIGN=\"LEFT\">returnp:</TD>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("\t\t\t<TD COLSPAN=\"2\" ALIGN=\"LEFT\">age:</TD>\r\n");
      out.write("\t\t\t<TD>\r\n");
      out.write("\t\t\t\t");

					if (getPerson31mtemp != null) {
				
      out.write(' ');
      out.print(getPerson31mtemp.getAge());
      out.write(' ');

					}
				
      out.write("\r\n");
      out.write("\t\t\t</TD>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("\t\t\t<TD COLSPAN=\"2\" ALIGN=\"LEFT\">name:</TD>\r\n");
      out.write("\t\t\t<TD>\r\n");
      out.write("\t\t\t\t");

					if (getPerson31mtemp != null) {
									java.lang.String typename36 = getPerson31mtemp.getName();
									String tempResultname36 = org.eclipse.jst.ws.util.JspUtils
											.markup(String.valueOf(typename36));
				
      out.write(' ');
      out.print(tempResultname36);
      out.write(' ');

 	}
 
      out.write("\r\n");
      out.write("\t\t\t</TD>\r\n");
      out.write("\t\t<TR>\r\n");
      out.write("\t\t\t<TD WIDTH=\"5%\"></TD>\r\n");
      out.write("\t\t\t<TD COLSPAN=\"2\" ALIGN=\"LEFT\">id:</TD>\r\n");
      out.write("\t\t\t<TD>\r\n");
      out.write("\t\t\t\t");

					if (getPerson31mtemp != null) {
				
      out.write(' ');
      out.print(getPerson31mtemp.getId());
      out.write(' ');

					}
				
      out.write("\r\n");
      out.write("\t\t\t</TD>\r\n");
      out.write("\t</TABLE>\r\n");
      out.write("\t");

		}
				break;

			case 42:
				gotMethod = true;
				com.soap.jaxws.beans.Person[] getAllPersons42mtemp = samplePersonServiceImplProxyid.getAllPersons();
				if (getAllPersons42mtemp == null) {
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(getAllPersons42mtemp);
      out.write('\r');
      out.write('\n');
      out.write('	');

		} else {
					String tempreturnp43 = null;
					if (getAllPersons42mtemp != null) {
						java.util.List<com.soap.jaxws.beans.Person> listreturnp43 = java.util.Arrays
								.asList(getAllPersons42mtemp);
						//  tempreturnp43 = listreturnp43.toString();
						for (com.soap.jaxws.beans.Person p : listreturnp43) {
							int id = p.getId();
							int age = p.getAge();
							String name = p.getName();
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(id);
      out.write(':');
      out.write(':');
      out.print(name);
      out.write(':');
      out.write(':');
      out.print(age);
      out.write('\r');
      out.write('\n');
      out.write('	');

		}
					}

				}
				break;
			}
		} catch (Exception e) {
	
      out.write("\r\n");
      out.write("\tException:\r\n");
      out.write("\t");
      out.print(org.eclipse.jst.ws.util.JspUtils.markup(e.toString()));
      out.write("\r\n");
      out.write("\tMessage:\r\n");
      out.write("\t");
      out.print(org.eclipse.jst.ws.util.JspUtils.markup(e.getMessage()));
      out.write('\r');
      out.write('\n');
      out.write('	');

		return;
		}
		if (!gotMethod) {
	
      out.write("\r\n");
      out.write("\tresult: N/A\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
